KG_hypothesis_gen_RAG: |-
  The user has proposed several hypothesis and conducted experiments to validate them. 
  The hypothesis can divided into two categories:
  1. Insights: These are the observations user did to other similar problems. You can either apply the same hypothesis or modify them to fit the current problem.
  2. Experience: These are former hypothesis and experiments user did to the current problem. You can either continue to improve the hypothesis or change to a new one.
  
  {% if insights %}
  The insights are as follows:
  {% for insight in insights %}
  Insight: {{ loop.index }}
  - hypothesis: {{ insight.hypothesis }}
  - experiments: {{ insight.experiments }}
  - conclusion: {{ insight.conclusion }}
  {% endfor %}
  {% endif %}

  {% if experiences %}
  The experiences are as follows:
  {% for experience in experiences %}
  Experience: {{ loop.index }}
  - hypothesis: {{ experience.hypothesis }}
  - experiments: {{ experience.experiments }}
  - conclusion: {{ experience.conclusion }}
  {% endfor %}
  {% endif %}


hypothesis_and_feedback: |-
  {% for hypothesis, experiment, feedback in trace.hist %}
  Hypothesis {{ loop.index }}: {{ hypothesis }}
  Corresponding Code (that leads to the difference in performance): {{experiment.sub_workspace_list[0].code_dict.get("model.py")}}
  Observation on the result with the hypothesis: {{ feedback.observations }}
  Feedback on the original hypothesis:  {{ feedback.hypothesis_evaluation }}
  New Feedback for Context (For your reference):  {{ feedback.new_hypothesis }}
  Reasoning for new hypothesis:  {{ feedback.reason }}
  Did changing to this hypothesis work? (focus on the change):  {{ feedback.decision }}
  {% endfor %}

hypothesis_output_format: |-
  The output should follow JSON format. The schema is as follows:
  {
    "action": "If "hypothesis_specification" provides the action you need to take, please follow "hypothesis_specification" to choose the action. Otherwise, based on previous experimental results, suggest the action you believe is most appropriate at the moment. It should be one of [{% if if_using_feature_selection %}"Feature engineering", "Feature processing", "Model feature selection", "Model tuning"{% else %}"Feature engineering", "Feature processing", "Model tuning"{% endif %}]",
    "hypothesis": "The new hypothesis generated based on the information provided.",
    "reason": "The reason why you generate this hypothesis. It should be comprehensive and logical. It should cover the other keys below and extend them.",
    "concise_reason": "Two-line summary. First line focuses on a concise justification for the change. Second line generalizes a knowledge statement.",
    "concise_observation": "One line summary. It focuses on the observation of the given scenario, data characteristics, or previous experiences (failures & succeses).",
    "concise_justification": "One line summary. Justify the hypothesis based on theoretical principles or initial assumptions.",
    "concise_knowledge": "One line summary. Transferable knowledge based on theoretical principles. Use conditional grammar. eg. "If...., ..; When..., .; and etc" Make sure that you state things clearly without ambiguity. Eg. avoid saying "previous hypothesis", because one wouldn't know what that is."
  }

factor_hypothesis_specification: |-
  1. **Type of Feature and Data Characteristics:**
    - Define the type of feature introduced.
    - Explain the data characteristics or patterns captured by this feature.
    - Omit unnecessary or redundant details.
  2. **Simple and Effective Features First:**
    - Start with features that are simple and likely effective.
    - Concisely explain why these features are expected to work.
    - Avoid complex or combined features initially.
  3. **Gradual Complexity Increase:**
    - Introduce more complex features as more experimental results are gathered.
    - Discuss potential advantages and complexities.
    - Combine features only after simpler ones are tested and validated.
  4. **New Directions and Optimizations:**
    - If a new direction is needed, explain why based on data analysis, domain knowledge, or observed patterns.
    - Suggest only one new direction at a time for clarity.
    - If a previous hypothesis did not surpass the previous best, but seems optimizable, you may continue in the same direction.
    - Highlight that features surpassing the previous best are included in the feature library to avoid re-implementation.
  5. **1-3 Feature tasks per Generation:**
    - Ensure each generation produces 1-3 feature tasks.
    - Balance simplicity and complexity to build a robust feature library.

feature_experiment_output_format: |-
  According to the hypothesis, please help user design one or more feature engineering tasks.
  The output should follow JSON format. The schema is as follows:
  {
      "factor or group name 1": {
          "description": "description of factor or group name 1",
          "formulation": "latex formulation of factor or group name 1",
          "variables": {
              "variable or function name 1": "description of variable or function 1",
              "variable or function name 2": "description of variable or function 2"
          }
      },
      "factor or group name 2": {
          "description": "description of factor or group name 2",
          "formulation": "latex formulation of factor or group name 2",
          "variables": {
              "variable or function name 1": "description of variable or function 1",
              "variable or function name 2": "description of variable or function 2"
          }
      }
      # Don't add ellipsis (...) or any filler text that might cause JSON parsing errors here!
  }

model_experiment_output_format: |-
  According to the hypothesis, please help user design one model task.
  We only build one model from four main model types: ["XGBoost", "RandomForest", "LightGBM", "NN"].
  The output should follow JSON format. The schema is as follows: 
  {
      "model_name": "model_name",
      "description": "A detailed description of the model",
      "architecture": "A detailed description of the model's architecture, e.g., neural network layers or tree structures",
      "hyperparameters": {
          "hyperparameter_name_1": "value of hyperparameter 1",
          "hyperparameter_name_2": "value of hyperparameter 2",
          "hyperparameter_name_3": "value of hyperparameter 3"
      },
      "model_type": "Select only one model type: XGBoost, RandomForest, LightGBM, or NN. The primary model must be unique, but you may use auxiliary models for support if you think it can have a good result like choosing A model as the main model, with B Model used for auxiliary support or optimization on specific details."
  }
  Usually, a larger model works better than a smaller one. Hence, the parameters should be larger.

model_tuning_feedback_generation:
  system: |-
    You are an advanced assistant for analyzing results in data-driven R&D.
    The task is described in the following scenario:
    {{ scenario }}

    You will analyze the current experiment's hypothesis, model tuning code, results, and compare them with previous experiments and the best past result. 
    Your feedback should:
    1. Confirm if the current result supports or refutes the hypothesis.
    2. Compare with previous best results.
    3. Suggest improvements or new directions.

    Please provide detailed and constructive feedback. Note that as hypothesis evolve, a general trend should be that the model grows larger. 
    Example JSON Structure for Result Analysis:
    {
      "Observations": "Your overall observations here",
      "Feedback for Hypothesis": "Observations related to the hypothesis",
      "New Hypothesis": "Your new hypothesis here",
      "Reasoning": "Reasoning for the new hypothesis",
      "Replace Best Result": "yes or no"
    }

    Hypothesis Evolution Logic:
    - If the current hypothesis works, make the model more complex (e.g., add layers, neurons, etc.).
    - If a hypothesis works, build on it. If not, adjust at the same level before growing deeper.
    - If it doesn't, modify elements at the current level (e.g., adjust regularization, change features).

    Example Hypothesis Evolution Stages: (We want hypotheses to continue growing.) Levels include **Model Type**, **Layer Configuration**, **Activation Functions**, **Regularization Techniques**, **Feature Selection Methods**
      - Initial Hypothesis: Use CNN with no feature selection.
      - Next Level (if successful): Add 5 convolutional layers, use all features.
      - Modify (if unsuccessful): Use 3 convolutional layers, add L1 regularization for feature selection.
      - Continue Growth (if successful): Add Leaky ReLU activation to all layers, retain L1-selected features.
      - Further Growth (if successful): Add dropout regularization (0.5 rate), retain L1 features.
      - Adjust (if unsuccessful): Use 5 layers, Leaky ReLU, dropout 0.3 rate.

  user: |-
    We are in a process of finding and validating hypotheses to build a powerful model. Each round aims to confirm or reject hypotheses based on results.
    Target hypothesis: 
    {{ hypothesis_text }}

    {% if last_hypothesis %} 
    Previous Round (if applicable):
      - Last Hypothesis: {{last_hypothesis.hypothesis}}
      - Last Task and Code: {{last_task_and_code}}
      - Last Result: {{last_result}}
    {% else %}
      - This is the first round. No previous information available.
    {% endif %} 

    SOTA (State of the Art) Round:
      - SOTA Task and Code: {{sota_task_and_code}}
      - SOTA Result: {{sota_result}}
    
    Current Round:
      - Current Hypothesis: {{hypothesis.hypothesis}}
      - Current Reasoning: {{hypothesis.reason}}
      - Current Model_code: {{model_code}}
      - Current Result: {{ exp.result }}

    Combined Results (Compared with SOTA): 
    {{ combined_result }}

    Analyze the combined result in the context of its ability to:
    1. Result Comparison: How does the result compare to the best? {{ evaluation_description }}
    2. To a large extent, the experiment with better metrics is the better one.

    Consider Changing Direction for Significant Gaps with the Best Result and the last round:
      - If the new results significantly differ from SOTA, consider a new direction.
      - If you've tweaked the same hyperparameter multiple times without improvement, it might be time to rethink or shift focus.

factor_feedback_generation:
  system: |-
    You are a professional data feature engineering assistant in data-driven R&D. 
    The task is described in the following scenario:
    {{ scenario }}
    
    You will receive a hypothesis, multiple tasks with their features, their results, and the best previous result. 
    Your feedback should specify whether the current result supports or refutes the hypothesis, compare it with previous best results, and suggest improvements or new directions.
    
    Please understand the following operation logic and then make your feedback suitable for the scenario:
      1. Logic Explanation:
          - If the previous hypothesis feature surpasses the previous best, include this feature in the feature library.
          - New experiments will generate new features, which will be combined with the features in the library.
          - These combined features will be evaluated and compared against the current best to continuously iterate.
      2. Development Directions:
          - New Direction:
              - Propose a new feature direction for exploration and development.
          - Optimization of Existing Direction:
              - If the previous experiment's feature replaced the best, suggest further improvements to that feature.
              - Clearly specify the differences in name and improvements compared to the previous feature.
          - Continued Research:
              - If the previous experiment's feature did not replace the best, suggest ways to optimize and develop features in this direction.
      3. Final Goal:
          - The ultimate goal is to continuously accumulate features that surpass each iteration to maintain the best results.
    
    Consider Changing Direction for Significant Gaps with the Best Result:
      - If the new results significantly differ from the best result, consider exploring a new direction.
      - Avoid re-implementing previous features as those that surpassed the best are already included in the feature library and will be used in each run.
    Please provide detailed and constructive feedback for future exploration.
    Respond in JSON format. Example JSON structure for Result Analysis:
    {
      "Observations": "Your overall observations here",
      "Feedback for Hypothesis": "Observations related to the hypothesis",
      "New Hypothesis": "Your new hypothesis here",
      "Reasoning": "Reasoning for the new hypothesis",
      "Replace Best Result": "yes or no"
    }
  user: |-
    Target hypothesis: 
    {{ hypothesis_text }}
    Tasks and Features:
    {% for task in task_details %}
      - {{ task.factor_name }}: {{ task.factor_description }}
        - Feature Formulation: {{ task.factor_formulation }}
        - Variables: {{ task.variables }}
        - Feature Implementation: {{ task.factor_implementation }}
        {% if task.factor_implementation == "False" %}
        **Note: This feature was not implemented in the current experiment. Only the hypothesis for implemented features can be verified.**
        {% endif %}
    {% endfor %}
    Combined Results (Compared with SOTA): 
    {{ combined_result }}
    
    Analyze the combined result in the context of its ability to:
    1. Result Comparison: How does the result compare to the best? {{ evaluation_description }}
    2. To a large extent, the experiment with better metrics is the better one.
    
    Consider Changing Direction for Significant Gaps with the Best Result:
      - If the new results significantly differ from the best, consider exploring a new direction.
      - Avoid re-implementing previous features as those that surpassed the best are already included in the feature library and will be used in each run.
    Note: Only features with 'Feature Implementation' as True are implemented and tested in this experiment. If 'Feature Implementation' is False, the hypothesis for that feature cannot be verified in this run.


feature_selection_feedback_generation:
  system: |-
    You are a professional feature selection assistant for machine learning models. Your task is to analyze the current feature selection strategy, evaluate its effectiveness, and suggest improvements.
    
    Consider the following when analyzing:
    1. How well does the current feature selection support the hypothesis?
    2. Which features seem to contribute most to the model's performance?
    3. Are there any features that might be redundant or noisy?
    4. What new feature selection strategies might improve the model?

    Provide detailed and constructive feedback, focusing on actionable insights for feature selection improvement.
    
    Respond in JSON format. Example JSON structure for Result Analysis:
    {
      "Observations": "Your overall observations here",
      "Feedback for Hypothesis": "Observations related to the hypothesis",
      "New Hypothesis": "Your new hypothesis here",
      "Reasoning": "Reasoning for the new hypothesis",
      "Replace Best Result": "yes or no"
    }

  user: |-
    We are in an experiment of finding hypotheses for feature selection and validating or rejecting them to optimize our model's performance.    
    Target hypothesis: 
    {{ hypothesis_text }}
    Tasks and Features:
    {% for task in task_details %}
      - {{ task.factor_name }}: {{ task.factor_description }}
        - Feature Formulation: {{ task.factor_formulation }}
        - Variables: {{ task.variables }}
        - Feature Implementation: {{ task.factor_implementation }}
        {% if task.factor_implementation == "False" %}
        **Note: This feature was not implemented in the current experiment. Only the hypothesis for implemented features can be verified.**
        {% endif %}
    {% endfor %}
    Combined Results (Compared with SOTA): 
    {{ combined_result }}

    Analyze the combined result in the context of its ability to:
    1. Result Comparison: How does the result compare to the best? {{ evaluation_description }}
    2. To a large extent, the experiment with better metrics is the better one.

    In your feedback, consider:
    1. How effective is the current feature selection strategy?
    2. Are there any patterns in the selected or discarded features that might inform future selections?
    3. How might we refine or change the feature selection approach to improve model performance?
    4. Are there any domain-specific considerations that should inform our feature selection?

extract_model_task_from_code:
  system: |-
    You are an expert in analyzing code for machine learning models.  
  user: |-
    Given the following code, summarize the machine learning model including:
    - Model architecture
    - Hyperparameters
    - Formulation and variables
    - Model type (one of XGBoost, RandomForest, LightGBM, NN)

    Code:
    {{ file_content }}

    Return the information in JSON format with the following structure:
    {
        "name": "",
        "description": "",
        "architecture": "",
        "hyperparameters": {},
        "formulation": "",
        "variables": {},
        "model_type": ""
    }
